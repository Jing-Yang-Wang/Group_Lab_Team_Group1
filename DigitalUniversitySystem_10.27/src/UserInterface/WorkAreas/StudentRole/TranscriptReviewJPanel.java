/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole;

import University.CourseSchedule.CourseLoad;
import University.CourseSchedule.SeatAssignment;
import University.Persona.Student.StudentProfile;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * 更新成绩表格，计算当前学期GPA、总体GPA并显示学术状态
 * 数据来源：StudentProfile -> Transcript -> CourseLoad -> SeatAssignment
 * @author Eve Dou
 */
public class TranscriptReviewJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private StudentProfile studentProfile;
     
    public TranscriptReviewJPanel(JPanel userProcessContainer, StudentProfile studentProfile) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.studentProfile = studentProfile;
    
    
    //初始化学生信息显示
    txtStudentName.setText(studentProfile.getPerson().getName());//从Person获取姓名
    txtStudentID.setText(studentProfile.getPerson().getPersonId());//从Person获取学号
    
    //填充学期下拉框
    populateSemesterComboBox();
    
    //默认显示第一个学期
    if(cbxSemester.getItemCount()>0){//获取下拉框当前有多少个选项
        cbxSemester.setSelectedIndex(0);//让下拉框默认选中第一个选项
        updateTranscriptTable(); 
    }
    
    //当下拉框切换时刷新表格
    cbxSemester.addActionListener(e -> updateTranscriptTable());
    
    
}
    //填充学期下拉菜单
    private void populateSemesterComboBox(){
        cbxSemester.removeAllItems();//清空旧选项
        //从学生成绩单中获取所有的课程负载CourseLoad(每个CourseLoad代表一个学期)
        for(CourseLoad cl : studentProfile.getTranscript().getAllCourseLoads()){
        //将每个学期的名称添加到下拉框
        cbxSemester.addItem(cl.getSemester());
    }
    }
    //更新成绩表(根据选中学期) + GPA显示  
    private void updateTranscriptTable(){
        //获取当前选中的学期名称
        String selectedSemester = (String)cbxSemester.getSelectedItem();
        if(selectedSemester == null)return;//如果没有选中任何学期就返回
        
        //获取该学期对应的课程负载对象CourseLoad
        CourseLoad courseLoad = studentProfile.getTranscript().getCourseLoadBySemester(selectedSemester);
        if (courseLoad == null)return;
        
        //清空表格
        DefaultTableModel model = (DefaultTableModel)tblTranscript.getModel();
        model.setRowCount(0);
        
        /*质量分(Quality Points)=成绩分值(Grade Point)*学分(Credits)
          GPA = 所有课程的质量分之和÷所有课程的学分之和*/
        //先准备[本学期总质量分]和[本学期总学分]
        double totalQualityPoints = 0.0;//累加gradePoints*Credits
        int totalCredits = 0;//累加学分
        
        //遍历本学期的每一门课(每条SeatAssignment代表一门课)
        for(SeatAssignment sa : courseLoad.getSeatAssignments()){
            //取得课程的基本信息
            String courseNumber = sa.getCourseOffer().getCourseNumber();
            String courseName = sa.getCourseOffer().getCourseName();
            int credits = sa.getCreditHours();
            
            //获取成绩
            double gradePoint = sa.getGrade();  
            
            //累计到学期总分
            totalQualityPoints += gradePoint*credits;
            totalCredits += credits;
            
            //填入到表格每一行
            Object[]row = new Object[7];
            row[0] = selectedSemester;
            row[1] = courseNumber;
            row[2] = courseName;
            row[3] = String.format("%.1f",gradePoint);
            row[4] = credits;
            row[5] = String.format("%.2f",gradePoint*credits);
            row[6] = "";
            model.addRow(row);
            }
        
        //学期GPA
        double termGPA = totalCredits>0? totalQualityPoints/totalCredits: 0.0;//条件?条件成立时的值:条件不成立时的值;
        txtTermGPA.setText(String.format("%.2f",termGPA));
        
        //总体GPA(所有学期)
        double overallPoints = 0.0;
        int overallCredits = 0;
        for(CourseLoad cl: studentProfile.getTranscript().getAllCourseLoads()){
            for(SeatAssignment sa: cl.getSeatAssignments()){
                overallPoints += sa.getGrade()*sa.getCreditHours();
                overallCredits += sa.getCreditHours();
            }
        }
        double overallGPA = overallCredits>0? overallPoints/overallCredits:0.0;
        txtOverallGPA.setText(String.format("%.2f", overallGPA));
        
        //学术状态
        if(overallGPA >= 3.7){
            txtAcademicStanding.setText("Excellent");
        }else if(overallGPA >= 3.0){
            txtAcademicStanding.setText("Good");
        }else if(overallGPA >= 2.0){
            txtAcademicStanding.setText("Average");
        }else{
            txtAcademicStanding.setText("Probation");
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        cbxSemester = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTranscript = new javax.swing.JTable();
        lblStudentID = new javax.swing.JLabel();
        lblStudentName = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        txtStudentID = new javax.swing.JTextField();
        lblTermGPA = new javax.swing.JLabel();
        lblAcademicStanding = new javax.swing.JLabel();
        lblOverallGPA = new javax.swing.JLabel();
        txtTermGPA = new javax.swing.JTextField();
        txtOverallGPA = new javax.swing.JTextField();
        txtAcademicStanding = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 102));

        btnBack.setText("<<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        lblTitle.setText("Transcript  Review");

        lblSemester.setText("Semester:");

        cbxSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSemesterActionPerformed(evt);
            }
        });

        tblTranscript.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Term", "Course Number", "Course Name", "Grade", "Credits", "Term GPA Points", "Overall GPA Points"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTranscript);

        lblStudentID.setText("Student ID:");

        lblStudentName.setText("StudentName:");

        txtStudentName.setEditable(false);

        txtStudentID.setEditable(false);

        lblTermGPA.setText("Term GPA:");

        lblAcademicStanding.setText("Academic Standing:");

        lblOverallGPA.setText("Overall GPA:");

        txtTermGPA.setEditable(false);

        txtOverallGPA.setEditable(false);

        txtAcademicStanding.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStudentName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(lblStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(248, 248, 248)
                                .addComponent(lblTitle)))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblAcademicStanding, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblOverallGPA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblTermGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtOverallGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAcademicStanding, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTermGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(296, 296, 296))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblTitle))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentID)
                    .addComponent(lblStudentName)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(cbxSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTermGPA)
                    .addComponent(txtTermGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOverallGPA)
                    .addComponent(txtOverallGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAcademicStanding)
                    .addComponent(txtAcademicStanding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(91, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
    userProcessContainer.remove(this);
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbxSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSemesterActionPerformed
    updateTranscriptTable();
    }//GEN-LAST:event_cbxSemesterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cbxSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAcademicStanding;
    private javax.swing.JLabel lblOverallGPA;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblStudentID;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblTermGPA;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblTranscript;
    private javax.swing.JTextField txtAcademicStanding;
    private javax.swing.JTextField txtOverallGPA;
    private javax.swing.JTextField txtStudentID;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtTermGPA;
    // End of variables declaration//GEN-END:variables
}
