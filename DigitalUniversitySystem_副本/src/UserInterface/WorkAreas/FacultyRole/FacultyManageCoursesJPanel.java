/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorkAreas.FacultyRole;

import UserInterface.WorkAreas.AdminRole.ManagePersonnelWorkResp.*;
import University.Business;
import University.CourseCatalog.Course;
import University.CourseSchedule.CourseOffer;
import University.CourseSchedule.CourseSchedule;
import University.CourseSchedule.SeatAssignment;
import University.Department.Department;
import University.Persona.Faculty.FacultyAssignment;
import University.Persona.Faculty.FacultyDirectory;
import University.Persona.Faculty.FacultyProfile;
import University.Persona.Student.StudentDirectory;
import University.Persona.Student.StudentProfile;
import java.util.ArrayList;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author kal bugrara
 * @author Michael Hynes
 * Course Management
    ▪ View and update assigned course details (title, description, schedule, capacity).
    ▪ Upload or modify syllabus.
    ▪ Open or close course enrollment (before semester start)
 * 
 */
public class FacultyManageCoursesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    Department department;
    FacultyDirectory facultyDirectory;
    FacultyProfile facultyProfile;    
    String semester = "Fall2020";

    public FacultyManageCoursesJPanel(Business bz, FacultyProfile f, JPanel jp) {
        initComponents();   
        CardSequencePanel = jp;
        this.facultyProfile = f;       
        this.business = bz;              
        
        //Get the faculty department
        Department targetDepartment = null;
        for (Department dept : business.getAllDepartments()) {
            Department result = dept.getDepartmentIfContainsFaculty(this.facultyProfile);
            if (result != null) {
                targetDepartment = result;
                break; 
            }
        }
        this.department = targetDepartment;
        
        //populateCombobox();
        populateTable();
    }

    
    //MH 10/20 - Removed semester because of time limitations
    //public void populateCombobox() {        
    //    //Get semesters
    //    cbSemesterSearch.addItem("Fall2020");
    //    cbSemesterSearch.setSelectedIndex(0);       
                
    //}
    
    public void populateTable() {
        //GOAL: View and update assigned course details (title, description, schedule, capacity) 
        //Display info on syllabus & open/close course enrollment
        //Get courses assigned to the faculty      
        
        //Setup our table
        DefaultTableModel model = (DefaultTableModel)tblHeader.getModel();
        model.setRowCount(0);               
        
        //String semester = cbSemesterSearch.getSelectedItem().toString().trim();
        //CourseSchedule courseSchedule = department.getCourseCatalog().getCourseList();
        
        //if (courseSchedule == null) {
        //    return;
        //}
        //for (CourseOffer co : courseSchedule.getSchedule()) { 
        
        //filterScheduleByFaculty
        
        ArrayList<FacultyAssignment> assignments = this.facultyProfile.getFacultyAssignments(); // <-- Direct Field Access
        for (FacultyAssignment fa : assignments) {
            CourseOffer co = fa.getCourseOffer();
               
                
                Course c = co.getSubjectCourse();

                Object[] row = new Object[4]; 
                row[0] = co.getCourseNumber();                
                row[1] = c.getCourseName();
                //row[2] = //Schedlue
                row[3] = String.valueOf(co.getSeatCount());
                //row[4] = //Syllabus

                model.addRow(row);                      
            } 
        }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        OrderScroll1 = new javax.swing.JScrollPane();
        tblHeader = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnOpenEnrollment = new javax.swing.JButton();
        btnCloseEnrollment = new javax.swing.JButton();
        btnUploadSyllabus = new javax.swing.JButton();
        btnDownloadSyllabus = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(null);

        lblTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblTitle.setText("Manage Courses");
        add(lblTitle);
        lblTitle.setBounds(21, 20, 370, 28);

        tblHeader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number (Title?)", "Name (Desc?)", "Schedule", "Capacity", "Syllabus?"
            }
        ));
        OrderScroll1.setViewportView(tblHeader);

        add(OrderScroll1);
        OrderScroll1.setBounds(20, 90, 560, 160);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(20, 260, 74, 23);

        btnOpenEnrollment.setText("Open Enrollment");
        btnOpenEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenEnrollmentActionPerformed(evt);
            }
        });
        add(btnOpenEnrollment);
        btnOpenEnrollment.setBounds(180, 260, 120, 23);

        btnCloseEnrollment.setText("Close Enrollment");
        btnCloseEnrollment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseEnrollmentActionPerformed(evt);
            }
        });
        add(btnCloseEnrollment);
        btnCloseEnrollment.setBounds(320, 260, 120, 23);

        btnUploadSyllabus.setText("Upload Syllabus");
        btnUploadSyllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadSyllabusActionPerformed(evt);
            }
        });
        add(btnUploadSyllabus);
        btnUploadSyllabus.setBounds(180, 300, 120, 23);

        btnDownloadSyllabus.setText("Download Syllabus");
        btnDownloadSyllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadSyllabusActionPerformed(evt);
            }
        });
        add(btnDownloadSyllabus);
        btnDownloadSyllabus.setBounds(320, 300, 120, 23);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(460, 440, 120, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.removeAll();

        FacultyWorkAreaJPanel aos = new FacultyWorkAreaJPanel(business, facultyProfile, CardSequencePanel);

        CardSequencePanel.add("faculty", aos);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnOpenEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenEnrollmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOpenEnrollmentActionPerformed

    private void btnCloseEnrollmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseEnrollmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseEnrollmentActionPerformed

    private void btnDownloadSyllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadSyllabusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDownloadSyllabusActionPerformed

    private void btnUploadSyllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadSyllabusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUploadSyllabusActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane OrderScroll1;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCloseEnrollment;
    private javax.swing.JButton btnDownloadSyllabus;
    private javax.swing.JButton btnOpenEnrollment;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUploadSyllabus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblHeader;
    // End of variables declaration//GEN-END:variables

}
