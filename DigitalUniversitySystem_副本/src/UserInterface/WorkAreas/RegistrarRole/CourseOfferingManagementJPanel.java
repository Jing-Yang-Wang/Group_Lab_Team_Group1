/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.RegistrarRole;



import University.CourseSchedule.CourseOffer;
import University.CourseSchedule.CourseSchedule;
import University.Department.Department;
import University.Persona.Faculty.FacultyProfile;
import University.Persona.Registrar.RegistrarProfile;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jingyangwang
 */
public class CourseOfferingManagementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCourseOfferingJPanel
     */
    
    JPanel CardSequencePanel;
    RegistrarProfile registrarProfile;
    
    public CourseOfferingManagementJPanel(JPanel CardSequencePanel,RegistrarProfile rp) {
        
       
        this.CardSequencePanel = CardSequencePanel;
        registrarProfile = rp;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblSemester = new javax.swing.JLabel();
        comboSemester = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseOffering = new javax.swing.JTable();
        btnAddCourseOffer = new javax.swing.JButton();
        btnDeleteCourseOffer = new javax.swing.JButton();
        btnEditCourseOffer = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 153, 255));

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        lblTitle.setText("Course Offering Management");

        btnBack.setText("<<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblSemester.setText("Semester");

        comboSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall2020", "Spring2021", "Fall2021", "Spring2022" }));
        comboSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSemesterActionPerformed(evt);
            }
        });

        tblCourseOffering.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Number", "Course Name", "Credits", "Faculty Name", "Capacity ", "Enrolled Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourseOffering);

        btnAddCourseOffer.setText("Add Course Offer");
        btnAddCourseOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseOfferActionPerformed(evt);
            }
        });

        btnDeleteCourseOffer.setText("Delete Course Offer");
        btnDeleteCourseOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCourseOfferActionPerformed(evt);
            }
        });

        btnEditCourseOffer.setText("Edit Existing Course Offer");
        btnEditCourseOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCourseOfferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                        .addComponent(lblTitle)
                        .addGap(210, 210, 210))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSemester)
                        .addGap(18, 18, 18)
                        .addComponent(comboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEditCourseOffer)
                .addGap(45, 45, 45))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnAddCourseOffer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteCourseOffer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnBack)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(comboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteCourseOffer)
                    .addComponent(btnAddCourseOffer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(btnEditCourseOffer)
                .addGap(39, 39, 39))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //remove current jpanel
        CardSequencePanel.remove(this);
        
        CardLayout layout = (CardLayout)CardSequencePanel.getLayout();
        //display the previous one
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSemesterActionPerformed
        // TODO add your handling code here:
        String selectedSemester = (String) comboSemester.getSelectedItem();
        populateTable();
      
    }//GEN-LAST:event_comboSemesterActionPerformed

    private void btnAddCourseOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseOfferActionPerformed
        // TODO add your handling code here:
        AddCourseOfferJPanel panel = new AddCourseOfferJPanel(CardSequencePanel, registrarProfile);
        CardSequencePanel.add("AddEditCourseOfferJPanel",panel);
        
        CardLayout layout = (CardLayout)CardSequencePanel.getLayout();
        layout.next(CardSequencePanel);                                      
        
    }//GEN-LAST:event_btnAddCourseOfferActionPerformed

    private void btnEditCourseOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCourseOfferActionPerformed
        // TODO add your handling code here:
        
        //pop-up message if nothing selected
        int selectedRow = tblCourseOffering.getSelectedRow();
        if(selectedRow < 0)
        {
        JOptionPane.showMessageDialog(null, "Please select a row to edit.","information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }else{
            
        CourseOffer selectedCourseOffer = (CourseOffer) tblCourseOffering.getValueAt(selectedRow, 0);
        //allow split to next jpanel if a row is selected
        EditExistingCourseOfferJPanel panel = new EditExistingCourseOfferJPanel(CardSequencePanel, registrarProfile,selectedCourseOffer);
        CardSequencePanel.add("EditExistingCourseOfferJPanel",panel);
        
        CardLayout layout = (CardLayout)CardSequencePanel.getLayout();
        layout.next(CardSequencePanel);  
        }
    }//GEN-LAST:event_btnEditCourseOfferActionPerformed

    private void btnDeleteCourseOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCourseOfferActionPerformed
        // TODO add your handling code here:
        //define selected row
        int selectedRow = tblCourseOffering.getSelectedRow();
       
        //pop-up warning message before delete 
        if(selectedRow >= 0) {           
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected course offer?","Warning", JOptionPane.INFORMATION_MESSAGE);
               //delete the row if it is confirmed 
               if(dialogResult == JOptionPane.YES_OPTION){
                    
                    String selectedSemester = (String) comboSemester.getSelectedItem();
                    CourseSchedule schedule = registrarProfile.getDepartment().getCourseSchedule(selectedSemester);
                    
                    CourseOffer selectedCourseOffer = (CourseOffer)tblCourseOffering.getValueAt(selectedRow, 0);
                    schedule.deleteCourseOffer(selectedCourseOffer);
                    //refresh table
                    populateTable();
               }
        
        }else{
            //pop-up message if no row is being selected
            JOptionPane.showMessageDialog(null, "Please select a row to delete.","information",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
      
        
    }//GEN-LAST:event_btnDeleteCourseOfferActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCourseOffer;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteCourseOffer;
    private javax.swing.JButton btnEditCourseOffer;
    private javax.swing.JComboBox<String> comboSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourseOffering;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
      

    //get the model table and clean i 
    DefaultTableModel model = (DefaultTableModel) tblCourseOffering.getModel();
    model.setRowCount(0);  
    
    Department department = registrarProfile.getDepartment();
    if (department == null) return; // department 不存在
    
    String selectedSemester = (String) comboSemester.getSelectedItem();
    CourseSchedule cs = department.getCourseSchedule(selectedSemester);
    if (cs == null) return; // schedule 不存在
    
    for (CourseOffer co : cs.getSchedule()) {
    
        Object[] row = new Object[6];
            row[0] = co;
            row[1] = co.getSubjectCourse().getCourseName();
            row[2] = co.getCreditHours();            
            row[3] = co.getFacultyProfile().getPerson().getPersonId();           
            row[4] = co.getSeatCount();
            row[5] = co.getEnrolledStudents().size();

        model.addRow(row);
        }

    }  
}   

