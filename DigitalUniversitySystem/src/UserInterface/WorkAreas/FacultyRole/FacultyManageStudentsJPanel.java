/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorkAreas.FacultyRole;

import UserInterface.WorkAreas.AdminRole.ManagePersonnelWorkResp.*;
import University.Business;
import University.CourseCatalog.Course;
import University.CourseSchedule.CourseOffer;
import University.CourseSchedule.CourseSchedule;
import University.CourseSchedule.SeatAssignment;
import University.Department.Department;
import University.Persona.Faculty.FacultyAssignment;
import University.Persona.Faculty.FacultyProfile;
import University.Persona.Student.StudentDirectory;
import University.Persona.Student.StudentProfile;
import java.util.ArrayList;


import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author kal bugrara
 * @author Michael Hynes
 * Student Management:
    ▪ View list of enrolled students per course.
    ▪ Access each student’s progress report and transcript summary.
    ▪ View and grade each assignment and compute final letter grade automatically.
    ▪ Rank students based on total grade percentage and show class GPA.
 */
public class FacultyManageStudentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    Department department;
    StudentDirectory studentDirectory;
    FacultyProfile facultyProfile;


    public FacultyManageStudentsJPanel(Business bz, FacultyProfile f, JPanel jp) {
        initComponents();
        CardSequencePanel = jp;
        this.business = bz;
        //this.department = d;
        this.facultyProfile = f;
    }
    
    
     public void populateCombobox() {        
        //Get semesters
        cbSchedule.addItem("Fall2020");
        cbSchedule.setSelectedIndex(0);     
        
        //Get Courses
        ArrayList<FacultyAssignment> assignments = this.facultyProfile.getFacultyAssignments(); 
        for (FacultyAssignment fa : assignments) {
            CourseOffer co = fa.getCourseOffer();   
            cbCourse.addItem(co.getCourseNumber());             
        }
        cbCourse.setSelectedIndex(0); 
    }
    
    public void populateTable() {        
        //Setup our table
        DefaultTableModel model = (DefaultTableModel)tblHeader.getModel();
        model.setRowCount(0);
                      
        //Get an arrey of SeatAssignments    
        String number = cbCourse.getSelectedItem().toString().trim();
        CourseOffer co = department.getCourseSchedule().getCourseOfferByNumber(number);
        
        //ArrayList<SeatAssignment> allSeatAssignments = co.get
       // if (allSeatAssignments == null) {
       //     return;
       // }
    /*
        for (SeatAssignment s : seatAssignments) {
        */
        /*    
        ArrayList<CourseOffer> allOffers = schedule.getCourseOfferings();
        
        if (allOffers == null) continue;
        
        for (CourseOffer offer : allOffers) {
            
            String courseName = offer.getCourse().getCourseCode();
            
            ArrayList<SeatAssignment> enrollmentRecords = offer.getEnrollmentRecords();
            
            if (enrollmentRecords == null) continue;
            
            for(SeatAssignment sa: enrollmentRecords){ 
                
                StudentProfile student = sa.getStudentProfile();
                
                Object[] row = new Object[3];
                
                // Column 0: Student ID
                row[0] = student.getPerson().getPersonId(); 
                
                // Column 1: Course Name/Code
                row[1] = courseName; 
                
                // Column 2: Grade
                // ASSUMPTION: sa.getGrade() exists
                row[2] = sa.getGrade(); 
                
                model.addRow(row);  
            }
        } */
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        OrderScroll = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        cbSchedule = new javax.swing.JComboBox<>();
        lblClassGrade = new javax.swing.JLabel();
        Next2 = new javax.swing.JButton();
        Next3 = new javax.swing.JButton();
        tbSN = new javax.swing.JTextField();
        lblSchedule = new javax.swing.JLabel();
        OrderScroll1 = new javax.swing.JScrollPane();
        tblHeader = new javax.swing.JTable();
        Next4 = new javax.swing.JButton();
        cbCourse = new javax.swing.JComboBox<>();
        lblCourse = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(null);

        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        add(Back);
        Back.setBounds(20, 260, 74, 23);

        Next.setText("Progress Report");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });
        add(Next);
        Next.setBounds(180, 260, 120, 23);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Manage Students");
        add(jLabel2);
        jLabel2.setBounds(21, 20, 370, 28);

        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Student", "Grade"
            }
        ));
        OrderScroll.setViewportView(tblDetail);

        add(OrderScroll);
        OrderScroll.setBounds(20, 300, 560, 130);

        cbSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbScheduleActionPerformed(evt);
            }
        });
        add(cbSchedule);
        cbSchedule.setBounds(70, 60, 72, 22);

        lblClassGrade.setText("Class Grade");
        add(lblClassGrade);
        lblClassGrade.setBounds(440, 60, 70, 20);

        Next2.setText("Save");
        Next2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next2ActionPerformed(evt);
            }
        });
        add(Next2);
        Next2.setBounds(460, 440, 120, 23);

        Next3.setText("Transcript");
        Next3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next3ActionPerformed(evt);
            }
        });
        add(Next3);
        Next3.setBounds(320, 260, 120, 23);
        add(tbSN);
        tbSN.setBounds(520, 60, 64, 22);

        lblSchedule.setText("Semester");
        add(lblSchedule);
        lblSchedule.setBounds(20, 60, 48, 16);

        tblHeader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Semester", "Student", "Course", "Faculty", "Grade"
            }
        ));
        OrderScroll1.setViewportView(tblHeader);

        add(OrderScroll1);
        OrderScroll1.setBounds(20, 90, 560, 160);

        Next4.setText("Assignments");
        Next4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next4ActionPerformed(evt);
            }
        });
        add(Next4);
        Next4.setBounds(460, 260, 120, 23);

        cbCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCourseActionPerformed(evt);
            }
        });
        add(cbCourse);
        cbCourse.setBounds(210, 60, 72, 22);

        lblCourse.setText("Course");
        add(lblCourse);
        lblCourse.setBounds(160, 60, 37, 16);
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.removeAll();

        FacultyWorkAreaJPanel aos = new FacultyWorkAreaJPanel(business, facultyProfile, CardSequencePanel);

        CardSequencePanel.add("faculty", aos);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_BackActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        // TODO add your handling code here:
        
        AdministerPersonJPanel mppd = new AdministerPersonJPanel(business, CardSequencePanel);
        CardSequencePanel.add(mppd);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }//GEN-LAST:event_NextActionPerformed

    private void cbScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbScheduleActionPerformed
        // TODO add your handling code here:
        //populateTable();
    }//GEN-LAST:event_cbScheduleActionPerformed

    private void Next2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Next2ActionPerformed

    private void Next3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Next3ActionPerformed

    private void Next4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Next4ActionPerformed

    private void cbCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Next;
    private javax.swing.JButton Next2;
    private javax.swing.JButton Next3;
    private javax.swing.JButton Next4;
    private javax.swing.JScrollPane OrderScroll;
    private javax.swing.JScrollPane OrderScroll1;
    private javax.swing.JComboBox<String> cbCourse;
    private javax.swing.JComboBox<String> cbSchedule;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblClassGrade;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblSchedule;
    private javax.swing.JTextField tbSN;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTable tblHeader;
    // End of variables declaration//GEN-END:variables

}
