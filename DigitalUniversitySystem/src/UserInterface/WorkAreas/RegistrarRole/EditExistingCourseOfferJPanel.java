/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.RegistrarRole;

import University.CourseSchedule.CourseOffer;
import University.Persona.Registrar.RegistrarProfile;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jingyangwang
 */
public class EditExistingCourseOfferJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EditExistingCourseOfferJPanel
     */
    private JPanel CardSequencePanel;
    private RegistrarProfile registrarProfile;
    private CourseOffer courseOffer;
   
    public EditExistingCourseOfferJPanel(JPanel CardSequencePanel,RegistrarProfile rp,CourseOffer co) {
        
        this.CardSequencePanel = CardSequencePanel;
        registrarProfile = rp;
        this.courseOffer = co;
 
        
        initComponents();
        
        refreshTextField();
        setViewMode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboSemester = new javax.swing.JComboBox<>();
        lblCapacity = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        fieldCourseNumber = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        fieldCourseName = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        fieldCredits = new javax.swing.JTextField();
        lblCourseNumber = new javax.swing.JLabel();
        comboFaculty = new javax.swing.JComboBox<>();
        lblCourseName = new javax.swing.JLabel();
        fieldCapacity = new javax.swing.JTextField();
        lblCredits = new javax.swing.JLabel();
        lblFacultyName = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Semester");

        comboSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall2020", "Spring2021", "Fall2021", "Spring2022" }));
        comboSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSemesterActionPerformed(evt);
            }
        });

        lblCapacity.setText("Capacity");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        lblTitle.setText("Edit Existing Course Offer");

        btnBack.setText("<<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblCourseNumber.setText("Course Number");

        comboFaculty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gina Montana", "Joshua Miller", "Megan Anderson", "Sarah Wilson", "Michael Brown", "Jessica Davis", "Laura Garcia", "Jay Chou" }));

        lblCourseName.setText("Course Name");

        lblCredits.setText("Credits");

        lblFacultyName.setText("Faculty Name");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblCourseNumber)
                                .addComponent(lblCourseName)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCredits)
                                    .addComponent(lblFacultyName)
                                    .addComponent(lblCapacity))))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldCourseNumber)
                            .addComponent(fieldCourseName)
                            .addComponent(fieldCredits)
                            .addComponent(fieldCapacity)
                            .addComponent(comboFaculty, 0, 223, Short.MAX_VALUE)
                            .addComponent(comboSemester, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                                .addComponent(btnUpdate))
                            .addComponent(lblTitle))))
                .addContainerGap(148, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseNumber)
                    .addComponent(fieldCourseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseName)
                    .addComponent(fieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCredits)
                    .addComponent(fieldCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFacultyName)
                    .addComponent(comboFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCapacity)
                    .addComponent(fieldCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSemesterActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
       setEditMode();

        

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //remove current jpanel
        CardSequencePanel.remove(this);
        
        CardLayout layout = (CardLayout)CardSequencePanel.getLayout();
        //display the previous one
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        //collect information from fields
    String semester = (String) comboSemester.getSelectedItem();
    String courseNumber = fieldCourseNumber.getText();
    String courseName = fieldCourseName.getText();
    String facultyName = (String) comboFaculty.getSelectedItem();
    int credits;
    int numberOfSeat;

    //check if fields are empty
    if(courseNumber.isBlank() || courseName.isBlank() || facultyName.isBlank()) {
        JOptionPane.showMessageDialog(null, "All fields are mandatory","Warning",JOptionPane.WARNING_MESSAGE);
        return;
    }

    //check the number if rights
    try{
       credits = Integer.parseInt(fieldCredits.getText());
       numberOfSeat = Integer.parseInt(fieldCapacity.getText()); 
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, "Please enter valid numbers for Credits and Capacity","Warning",JOptionPane.WARNING_MESSAGE);
        return;
    }
    //set the information to corresponding variable

    courseOffer.getCourse().setCourseNumber(courseNumber);
    courseOffer.getCourse().setCourseName(courseName);
    courseOffer.getCourse().setCredits(credits);


    int oldSeats = courseOffer.getSeatCount();
    if (numberOfSeat != oldSeats) {
        courseOffer.getSeatList().clear();
        courseOffer.generateSeats(numberOfSeat);
    }

    //renew the faculty information
    University.Persona.Faculty.FacultyProfile selectedFaculty = null;
    for (University.Persona.Faculty.FacultyProfile fp : registrarProfile.getDepartment().getFacultyDirectory().getTeacherList()) {
        if (fp.getPerson().getName().equalsIgnoreCase(facultyName)) {
            selectedFaculty = fp;
            break;
        }
    }
    if (selectedFaculty != null) {
        courseOffer.AssignAsTeacher(selectedFaculty);
    }

    //renew the semester
    University.CourseSchedule.CourseSchedule newSchedule = registrarProfile.getDepartment().getCourseSchedule(semester);
    if (newSchedule != null && courseOffer.getCourseSchedule() != newSchedule) {
        University.CourseSchedule.CourseSchedule oldSchedule = courseOffer.getCourseSchedule();
        if (oldSchedule != null) {
            oldSchedule.getSchedule().remove(courseOffer);
        }
        newSchedule.getSchedule().add(courseOffer);
        courseOffer.setCourseSchedule(newSchedule);
    }

    //pop-up successful message
    JOptionPane.showMessageDialog(null, "Course Offer successfully updated!", "Success", JOptionPane.INFORMATION_MESSAGE);

    
    setViewMode();

            
        
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboFaculty;
    private javax.swing.JComboBox<String> comboSemester;
    private javax.swing.JTextField fieldCapacity;
    private javax.swing.JTextField fieldCourseName;
    private javax.swing.JTextField fieldCourseNumber;
    private javax.swing.JTextField fieldCredits;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblCourseNumber;
    private javax.swing.JLabel lblCredits;
    private javax.swing.JLabel lblFacultyName;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private void refreshTextField() {
        
        CourseOffer co = this.courseOffer; 
        
       if (courseOffer == null || courseOffer.getCourse() == null) return;

        fieldCourseNumber.setText(courseOffer.getCourse().getCourseNumber());
        fieldCourseName.setText(courseOffer.getCourse().getCourseName());
        fieldCredits.setText(String.valueOf(courseOffer.getCreditHours()));
        fieldCapacity.setText(String.valueOf(courseOffer.getSeatCount()));


        //set faculty comboBox
        ////MH 10/26 - Fixes because ID was changed to UniversityID
        //MH - Added to fix issue when there is no faculty assigned
        String facultyName = getInstructorByCourseOffer(co);//co.getFacultyProfile().getPerson().getUniversityID();
        comboFaculty.setSelectedItem(facultyName);

        //set semester comboBox
        comboSemester.setSelectedItem(co.getCourseSchedule().getSemester());
    
    }

    private void setViewMode() {
         //set all fields untouchable
         comboSemester.setEnabled(false);
         fieldCourseNumber.setEnabled(false);
         fieldCourseName.setEnabled(false);
         fieldCredits.setEnabled(false);
         comboFaculty.setEnabled(false);
         fieldCapacity.setEnabled(false);
         //set save button untouchable
         btnSave.setEnabled(false);
         //only let update button being touchable
         btnUpdate.setEnabled(true);
    }

    private void setEditMode() {
        //set all fields touchable
         comboSemester.setEnabled(true);
         fieldCourseNumber.setEnabled(true);
         fieldCourseName.setEnabled(true);
         fieldCredits.setEnabled(true);
         comboFaculty.setEnabled(true);
         fieldCapacity.setEnabled(true);
         //set save button touchable
         btnSave.setEnabled(true);
         //only let update button being unouchable
         btnUpdate.setEnabled(false);
        
    }

    //MH - Added to fix issue when there is no faculty assigned
    private String getInstructorByCourseOffer(CourseOffer co) {
        if (co.getFacultyProfile() == null) {
            return "None Assigned";
        }
        if (co.getFacultyProfile().getPerson() == null) {
            return "Unnamed";
        }
        String instructorName = co.getFacultyProfile().getPerson().getName();
        if (instructorName == null) {
            return "Unnamed";
        }    
        return instructorName;
    }  
   
}
